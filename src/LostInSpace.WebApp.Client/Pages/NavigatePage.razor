@page "/navigate"

@layout LostInSpace.WebApp.Client.Shared.GameLayout;

@using HuskyNet.WebClient.Services;

<div class="page-insert">

	<div class="page-gridarea">
		<div class="grid" id="zoomcanvasid" @onclick="MapOnClick" @onmouseup="MapOnMouseUp" oncontextmenu="return false;" style="@(InputMode == NavigateInputMode.SetDestination ? "cursor: crosshair;" : "")">

			@if (ClientService.View?.Lobby?.World?.Projectiles != null)
			{
				@foreach (var projectileKvp in ClientService.View.Lobby.World.Projectiles)
				{
					var projectile = projectileKvp.Value;

					<div class="projectile" style="top: 0; left: 0; transform: translate(@(projectile.Position.x)px, @(projectile.Position.y)px) rotate(@(projectile.Rotation + 180.0f)deg);">

					</div>
				}
			}

			@if (ClientService.View?.Lobby?.World?.Beams != null)
			{
				<svg class="beams">
					@foreach (var beamKvp in ClientService.View.Lobby.World.Beams)
					{
						var beam = beamKvp.Value;

						string colour;
						switch (beam.LifetimeRemaining)
						{
							default:
							case 0:
								colour = "#8a7c69";
								break;

							case 1:
								colour = "#c7ad89";
								break;

							case 2:
								colour = "#eecda0";
								break;
						}

						<polyline style="stroke: @colour" points="@((int)beam.StartPosition.x),@((int)beam.StartPosition.y) @((int)beam.EndPosition.x),@((int)beam.EndPosition.y)"></polyline>
					}
				</svg>
			}


			@if (ClientService.View?.Lobby?.World?.Ships != null)
			{
				@foreach (var shipKvp in ClientService.View.Lobby.World.Ships)
				{
					var ship = shipKvp.Value;

					var owner = ClientService.View.Lobby.Players[shipKvp.Key];

					<div class="player" style="top: 0; left: 0; transform: translate(@(ship.Position.x)px, @(ship.Position.y)px)">

						<div class="player-ship" style="transform: rotate(@(ship.Rotation + 180.0f)deg);">

						</div>

						<label>@owner.DisplayName</label>
						<progress value="@((int)(ship.HealthPercentage * 100))" max="100"></progress>

					</div>
				}
			}
		</div>

		@if (InputMode == NavigateInputMode.None)
		{
			<div class="game-btn game-btn-navigate" @onclick="GotoButtonClick">Goto</div>
		}
	</div>

	<div class="page-statusarea">
		<h3>Dashboard</h3>

		<div class="dashboard-row">
			<div class="warning-light active">Low Fuel</div>
			<div class="warning-light">Low Supplies</div>
			<div class="danger-light">Engine Fire!</div>
			<div class="danger-light active">Out of Fuel</div>
		</div>

		@if (ClientService.View?.Lobby != null)
		{
			@foreach (var character in ClientService.View.Lobby.World.Ships)
			{
				<p><b>@character.Key</b>: @character.Value.Position.x.ToString("0.00"), @character.Value.Position.y.ToString("0.00")</p>
			}
		}
	</div>
</div>
