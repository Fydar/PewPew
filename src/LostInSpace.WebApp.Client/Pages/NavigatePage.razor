@page "/navigate"

@layout LostInSpace.WebApp.Client.Shared.GameLayout;

@using HuskyNet.WebClient.Services;

<div class="page-insert">

	<div class="page-gridarea">

		@{
			string cursor = "default";

			if (InputMode == NavigateInputMode.SetDestination)
			{
				cursor = "crosshair";
			}
			else if (InputMode == NavigateInputMode.Ability)
			{
				cursor = "cell";
			}
		}

		<div class="grid" id="zoomcanvasid" @onclick="MapOnClick" @onmouseup="MapOnMouseUp" oncontextmenu="return false;" style="cursor: @cursor;">

			@if (ClientService.View?.Lobby?.World?.Projectiles != null)
			{
				@foreach (var projectileKvp in ClientService.View.Lobby.World.Projectiles)
				{
					var projectile = projectileKvp.Value;

					<div class="projectile" style="top: 0; left: 0; transform: translate(@(projectile.Position.x)px, @(projectile.Position.y)px) rotate(@(projectile.Rotation + 180.0f)deg); @(projectile.IsDestroyed ? "opacity: 0;" : "")">
					</div>
				}
			}

			@if (ClientService.View?.Lobby?.World?.Beams != null)
			{
				<svg class="beams">
					@foreach (var beamKvp in ClientService.View.Lobby.World.Beams)
					{
						var beam = beamKvp.Value;

						string colour;
						switch (beam.LifetimeRemaining)
						{
							default:
							case 0:
								colour = "#8a7c69";
								break;

							case 1:
								colour = "#c7ad89";
								break;

							case 2:
								colour = "#eecda0";
								break;
						}

						<polyline style="stroke: @colour; stroke-width: @beam.DamagePerTick;" points="@((int)beam.StartPosition.x),@((int)beam.StartPosition.y) @((int)beam.EndPosition.x),@((int)beam.EndPosition.y)"></polyline>
					}
				</svg>
			}

			@if (ClientService.View?.Lobby?.World?.Ships != null)
			{
				@foreach (var shipKvp in ClientService.View.Lobby.World.Ships)
				{
					var ship = shipKvp.Value;

					<div class="player @ship.ShipType" style="top: 0; left: 0; transform: translate(@(ship.Position.x)px, @(ship.Position.y)px)">

						<div class="player-ship" style="transform: rotate(@(ship.Rotation + 180.0f)deg);">

						</div>

						@if (ClientService.View.Lobby.Players.TryGetValue(shipKvp.Key, out var owner))
						{
							<label>@owner.DisplayName</label>
						}
						else
						{
							<label>Disconnected...</label>
						}
						<progress value="@((int)(ship.HealthPercentage * 100))" max="100"></progress>

						@if (shipKvp.Key == ClientService.View?.Client?.ClientId)
						{
							float range = ship.BeamsRange + ship.Radius;

							<div class="range-indicator" style="width: @(range * 2)px; height: @(range * 2)px;"></div>
						}

					</div>
				}
			}
		</div>

		@{
			LostInSpace.WebApp.Shared.View.GameplayShip playerShip = null;
		}
		@if (ClientService.View?.Lobby?.World?.Ships.TryGetValue(ClientService.View.Client.ClientId, out playerShip) ?? false)
		{
			@if (InputMode == NavigateInputMode.SetDestination
			   && playerShip.CanBarrage)
			{
				<div class="game-btn game-btn-navigate" @onclick="AbilityButtonClicked">Barrage</div>
			}
		}
	</div>
</div>
