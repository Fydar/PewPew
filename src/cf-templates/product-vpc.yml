AWSTemplateFormatVersion: '2010-09-09'

Description: 'Product VPC'
Parameters:

  ProductName:
    Type: String
    Description: A user readable name for the product
    Default: 'website'

  VpcCidr:
    Type: String
    Description: Specifies the CIDR Block of VPC
    Default: '10.10.0.0/16'
    AllowedPattern: '^((1?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\.){3}(1?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\/(8|16|24)$'
    
  SubnetIPv4Cidr1:
    Type: String
    Description: Specifies the IPv4 CIDR Block of Subnet 1
    Default: '10.10.0.0/24'
    AllowedPattern: '^((1?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\.){3}(1?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\/(8|16|24|32)$'
    
  SubnetIPv4Cidr2:
    Type: String
    Description: Specifies the IPv4 CIDR Block of Subnet 2
    Default: '10.10.1.0/24'
    AllowedPattern: '^((1?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\.){3}(1?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\/(8|16|24|32)$'
    
  SubnetIpv6Cidr1:
    Type: String
    Description: Specifies the IPv6 CIDR Block of Subnet 1
    Default: '2600:1f18:30d:9606::/64'
    AllowedPattern: '^([0-9a-fA-F]{1,4}:){4}:/64$'
    
  SubnetIpv6Cidr2:
    Type: String
    Description: Specifies the IPv6 CIDR Block of Subnet 2
    Default: '2600:1f18:30d:9607::/64'
    AllowedPattern: '^([0-9a-fA-F]{1,4}:){4}:/64$'

  SubnetAz1:
    Type: String
    Description: >
      Specifies an availability zone for a subnet.
    Default: 'us-east-1a'
    AllowedValues:
      - us-east-1a
      - us-east-1b
      - us-east-1c
      - us-east-1d
      - us-east-1e
      - us-east-1f
    
  SubnetAz2:
    Type: String
    Description: >
      Specifies an availability zone for a subnet.
    Default: 'us-east-1b'
    AllowedValues:
      - us-east-1a
      - us-east-1b
      - us-east-1c
      - us-east-1d
      - us-east-1e
      - us-east-1f

Mappings: {}
Resources:

  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${ProductName}

  PubSubnetAz1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Ref SubnetAz1
      CidrBlock: !Ref SubnetIPv4Cidr1
      MapPublicIpOnLaunch: true
      # Ipv6CidrBlock: !Ref SubnetIpv6Cidr1
      # AssignIpv6AddressOnCreation: true
      Tags:
        - Key: Name
          Value: !Sub ${ProductName} SbAz1

  PubSubnetAz2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc

      AvailabilityZone: !Ref SubnetAz2
      CidrBlock: !Ref SubnetIPv4Cidr2
      MapPublicIpOnLaunch: true
      # Ipv6CidrBlock: !Ref SubnetIpv6Cidr2
      # AssignIpv6AddressOnCreation: true
      Tags:
        - Key: Name
          Value: !Sub ${ProductName} SbAz2

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${ProductName} Igw

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref InternetGateway

  RouteViaIgw:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub ${ProductName} Rtb

  PublicRouteViaIgwIpv4:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteViaIgw
      GatewayId: !Ref InternetGateway
      DestinationCidrBlock: 0.0.0.0/0

  PublicRouteViaIgwIpv6:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteViaIgw
      GatewayId: !Ref InternetGateway
      DestinationIpv6CidrBlock: ::/0

  PubSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteViaIgw
      SubnetId: !Ref PubSubnetAz1

  PubSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteViaIgw
      SubnetId: !Ref PubSubnetAz2


Outputs:

  InstanceArn:
    Value: !GetAtt [PortfolioInstanceRepository, Arn]
